{"version":3,"mappings":"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","names":["routes","path","component","_login_component__WEBPACK_IMPORTED_MODULE_0__","LoginRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","_angular_core__WEBPACK_IMPORTED_MODULE_3__","LoginComponent","cs","formBuilder","authService","router","createForm","form","group","username","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","password","controls","enable","disable","user","processing","disableForm","get","value","login","subscribe","token","decoded","success","makeToast","message","enableForm","storeUserData","CurrentlyloggedIn","loggingIn","role","logout","navigate","selectors","decls","vars","consts","template","ctx","LoginModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_login_routing_module__WEBPACK_IMPORTED_MODULE_0__","_theme_theme_module__WEBPACK_IMPORTED_MODULE_2__","_nebular_theme__WEBPACK_IMPORTED_MODULE_5__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","declarations","_login_component__WEBPACK_IMPORTED_MODULE_1__"],"sources":["webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n","<nb-layout>\r\n  <nb-layout-column>\r\n    <div class=\"wrapper\">\r\n      <div class=\"container\">\r\n        <h2 style=\"z-index: 9999999\">Akeem Services</h2>\r\n        <form [formGroup]=\"form\" (submit)=\"onLoginSubmit()\">\r\n          <div class=\"form-group\">\r\n            <label style=\"color:white\" for=\"username\">Username</label>\r\n            <div\r\n              [ngClass]=\"{'has-error': form.controls.username.errors && form.controls.username.dirty, 'has-success': form.controls.username.valid && form.controls.username.dirty }\">\r\n              <input class=\"form-control\" type=\"text\" name=\"username\" formControlName=\"username\" />\r\n              <ul class=\"help-block\">\r\n                <li *ngIf=\"form.controls.username.errors?.required && form.controls.username.dirty\">This field is\r\n                  required.</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label style=\"color:white\" for=\"password\">Password</label>\r\n            <div\r\n              [ngClass]=\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\">\r\n              <input class=\"form-control\" type=\"password\" name=\"password\" formControlName=\"password\" />\r\n              <ul class=\"help-block\">\r\n                <li *ngIf=\"form.controls.password.errors?.required && form.controls.password.dirty\">This field is\r\n                  required.</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <input [disabled]=\"!form.valid || processing\" class=\"btn btn-primary\" type=\"submit\" value=\"Login\" />\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  </nb-layout-column>\r\n</nb-layout>\r\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../@core/services/auth.service';\r\nimport { ConnectionService } from '../@core/services/connection.service';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { UserToken } from '../@core/data/user-token';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: String;\r\n  password: String;\r\n  msg: String;\r\n  loader = false;\r\n  disableSubmit;\r\n  conn;\r\n  userID;\r\n\r\n  messageClass;\r\n  message;\r\n  processing = false;\r\n  form: FormGroup;\r\n\r\n\r\n\r\n  constructor(\r\n    public cs: ConnectionService,\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n\r\n  ) {\r\n    // this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      username: ['', Validators.required], // Username field\r\n      password: ['', Validators.required] // Password field\r\n    });\r\n  }\r\n\r\n  enableForm() {\r\n    this.form.controls['username'].enable(); // Enable username field\r\n    this.form.controls['password'].enable(); // Enable password field\r\n  }\r\n\r\n  disableForm() {\r\n    this.form.controls['username'].disable(); // Disable username field\r\n    this.form.controls['password'].disable(); // Disable password field\r\n  }\r\n  Submit() {\r\n    const user = {\r\n      username: this.username,\r\n      password: this.password,\r\n    };\r\n\r\n  }\r\n  // Functiont to submit form and login user\r\n  onLoginSubmit() {\r\n\r\n    this.processing = true; // Used to submit button while is being processed\r\n    this.disableForm(); // Disable form while being process\r\n    const user = {\r\n      username: this.form.get('username').value, // Username input field\r\n      password: this.form.get('password').value // Password input field\r\n    }\r\n\r\n    // Function to send login data to API\r\n    this.authService.login(user).subscribe((token: any) => {\r\n\r\n\r\n      let decoded = jwt_decode<UserToken>(token.token);\r\n\r\n      //Check if response was a success or error\r\n      if (!token.success) {\r\n        this.authService.makeToast('danger', 'Failed Logging in', token.message);\r\n        this.processing = false; // Enable submit button\r\n        this.enableForm(); // Enable form for editting\r\n      } else {\r\n        this.authService.makeToast('success', 'Success', token.message);\r\n        this.authService.storeUserData(token.token,decoded);\r\n        if (this.authService.CurrentlyloggedIn()) {\r\n            this.authService.loggingIn(decoded.role)\r\n        } else {\r\n          this.authService.logout()\r\n          this.router.navigate(['login']); // Navigate to dashboard view\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\nimport { ThemeModule } from '../@theme/theme.module';\r\nimport { NbSpinnerModule } from '@nebular/theme';\r\nimport { NbCardModule, NbButtonModule } from '@nebular/theme';\r\nimport { NbLayoutModule } from '@nebular/theme';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    ThemeModule,\r\n    NbSpinnerModule,\r\n    NbCardModule,\r\n    NbLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NbButtonModule,\r\n  ],\r\n  declarations: [LoginComponent]\r\n})\r\nexport class LoginModule { }\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n"]}